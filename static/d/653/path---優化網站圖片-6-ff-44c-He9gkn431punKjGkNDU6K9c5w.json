{"data":{"site":{"siteMetadata":{"title":"Whien's Dev Blog","author":"Whien"}},"markdownRemark":{"id":"3df4dd81-e6d4-5a17-861e-9ca7c181001e","excerpt":"範例服用 免費圖片壓縮工具： Imgr 範例： Examples 懶載入簡介 懶載入是個已經使用非常非常久的網站圖片優化手法，所謂的「懶」就是類似「延遲」的概念，\n在網頁載入時，會將所有的  < img…","html":"<p><img src=\"https://upload.cc/i1/2019/04/11/sBy4kD.jpg\" alt=\"Image\"></p>\n<h1>範例服用</h1>\n<p>免費圖片壓縮工具：<a href=\"https://imgr.yosgo.com\" target=\"_blank\" rel=\"nofollow\">Imgr</a></p>\n<p>範例：<a href=\"https://imgr.yosgo.com/examples\" target=\"_blank\" rel=\"nofollow\">Examples</a></p>\n<h1>懶載入簡介</h1>\n<p>懶載入是個已經使用非常非常久的網站圖片優化手法，所謂的「懶」就是類似「延遲」的概念，\n在網頁載入時，會將所有的 &#x3C;img> 標籤資源全部一次下載，假使一個網站使用過多的圖片時，\n就會導致下載速度緩慢，也會使得網站效率載入降低，也會使流量使用比較大。</p>\n<p>而懶載入能解決的問提就是讓使用者能慢慢的載入圖片，使得網站的瀏覽流暢度提高，進而使網站擁有更佳體驗。</p>\n<h1>如何解決</h1>\n<p>首先先了解懶載入手法的概念，懶載入最重要的就是只有在「使用者看得到」的情況下，才將圖片陸陸續續載入進來，\n而「使用者看不到」的圖片最早期通常會先用一個空白圖片或是一致的圖片來解決。</p>\n<p>程式碼一般會長這樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/placeholder-path.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src-data</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/origin-path.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>在使用滾輪事件監聽的方式來獲取使用者是否已經在視窗中看見「圖片畫面」，再將 <code class=\"language-text\">src</code> 與 <code class=\"language-text\">src-data</code> 做替換。</p>\n<p>也可以使用 content loader 來製作替代圖片區塊，例如 <a href=\"https://github.com/danilowoz/react-content-loader\" target=\"_blank\" rel=\"nofollow\">react-content-loader</a>，\n這個 React 元件提供了網站載入時，可以用 &#x3C;svg> 來快速產生替代圖片區塊，</p>\n<h1>如何觀察</h1>","frontmatter":{"title":"透過 Web IntersectionObserver API 優化網站圖片","date":"April 11, 2019","description":"透過 Web IntersectionObserver API 優化網站圖片","featuredImage":{"publicURL":"/static/titleImage-0c8a60fa44b465b749f57c53853a7893.jpg"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/優化網站圖片/","previous":{"fields":{"slug":"/透過 React CreateContext 搭配 React useContext 與 useReducer 來做 Global State Manager/"},"frontmatter":{"title":"透過 React CreateContext 搭配 React useContext 與 useReducer 來做 Global State Manager"}},"next":null}}