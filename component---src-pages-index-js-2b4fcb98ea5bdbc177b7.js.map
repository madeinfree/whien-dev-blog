{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","keywords","map","node","frontmatter","fields","slug","key","style","boxShadow","to","marginTop","marginBottom","rhythm","featuredImage","borderRadius","sizes","childImageSharp","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"0PASMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAM,YACNK,SAAU,CAAC,OAAD,yCAEZ,kBAAC,IAAD,MACCJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,kBAAC,OAAD,CAAME,MAAO,CAAEC,UAAU,QAAWC,GAAIP,EAAKE,OAAOC,MAClD,wBACEE,MAAO,CACLG,UAAW,GACXC,aAAcC,YAAO,OAGtBjB,GAEFO,EAAKC,YAAYU,cAChB,kBAAC,IAAD,CACEN,MAAO,CAAEO,aAAc,GACvBC,MAAOb,EAAKC,YAAYU,cAAcG,gBAAgBD,QAEtD,MAEN,+BAAQb,EAAKC,YAAYc,MACzB,uBACEC,wBAAyB,CACvBC,OAAQjB,EAAKC,YAAYiB,aAAelB,EAAKmB,iB,GApCvCC,IAAMC,WA+CfpC,YAER,IAAMqC,EAAS","file":"component---src-pages-index-js-2b4fcb98ea5bdbc177b7.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Img from \"gatsby-image\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`, `whien`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                <h3\n                  style={{\n                    marginTop: 20,\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  {title}\n                </h3>\n                {node.frontmatter.featuredImage ? (\n                  <Img\n                    style={{ borderRadius: 3 }}\n                    sizes={node.frontmatter.featuredImage.childImageSharp.sizes}\n                  />\n                ) : null}\n              </Link>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            featuredImage {\n              publicURL\n              childImageSharp {\n                sizes(maxWidth: 630) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}